# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  # Run CI when a new branch or tag is created
  create:
    # only run if the tag is a supported version tag
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  # Run CI when a new commit is pushed
  push:
    paths:
      - simulation/**
      - visualization/**
    branches:
      - main
      - dev
  # Run CI when a new pull request is created
  pull_request:
    paths:
      - simulation/**
      - visualization/**
    branches:
      - main
      - dev
  # Trigger workflow manually
  workflow_dispatch:

jobs:
  # Check if the project can be built without errors
  # Linting, tests and documentation generation is allowed to fail so that in
  # case of an error in them the core build and scripts are still verified
  build_visualization:

    strategy:
      matrix:
        node-version: [22.x]
        os: [ubuntu-latest,windows-latest]

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: visualization

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    #- name: Install dependencies (apt - Linux)
    #  if: matrix.os == 'ubuntu-latest'
    #  run: sudo apt install graphviz pandoc
    #- name: Install dependencies (choco - Windows)
    #  if: matrix.os == 'windows-latest'
    #  run: choco install graphviz nsis pandoc
    - name: Install dependencies (npm)
      run: npm ci
    #- name: Run tests
    #  run: npm run test
    #  continue-on-error: true
    - name: Lint
      run: npm run lint
      continue-on-error: true
    - name: Build
      run: npm run build
    - name: Checks
      run: npm run check
      continue-on-error: true
    - name: Checks [expected to fail]
      run: npm run check:exports
      continue-on-error: true
    - name: Build Docker image
      if: matrix.os == 'ubuntu-latest'
      run: docker build --tag nextjs-docker .

  # Check if the project can be built without errors
  # Linting, tests and documentation generation is allowed to fail so that in
  # case of an error in them the core build and scripts are still verified
  build_simulation:

    strategy:
      matrix:
        node-version: [22.x]
        os: [ubuntu-latest,windows-latest]

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: simulation

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies (npm)
      run: npm ci
    - name: Run tests
      run: npm run test
      continue-on-error: true
    - name: Lint
      run: npm run lint
      continue-on-error: true
    - name: Build
      run: npm run build
    - name: Checks
      run: npm run check
      continue-on-error: true
    - name: Checks [expected to fail]
      run: npm run check:exports
      continue-on-error: true
    - name: Build Docker image
      if: matrix.os == 'ubuntu-latest'
      run: docker build --tag express-docker .
    - name: Create documentation
      # hangs on Windows (GitHub Actions)
      if: matrix.os == 'ubuntu-latest'
      run: npm run docs
      continue-on-error: true
